一、内存相关
系统给每个应用程序分配了一定大小的内存空间，如果这个内存空间不足，就会触发OOM。

触发内存溢出的原因就是内存不足，具体场景：
1、bitmap过大
2、引用的对象没有正确释放
3、资源对象没有正确关闭
4、有内存溢出导致的

内存泄漏
有的对象只有有限的生命周期，他们任务完成后会被GC回收。而没有被正常回收的则继续占用内存，造成内存泄漏，直到内存溢出。

Android如何管理应用的进程和内存分配？
java----JVM
Android----Dalvik
Dalvik负责常规的垃圾回收工作

Android有一个共享内存机制
1、Android应用的进程是通过Zygote进程fork出来的，系统启动并载入通用的framework代码和资源之后，Zygote进程开始启动。
当启动新的应用程序时，系统会从Zygote进程中fork一个新的进程，然后在新的进程中加载运行应用程序的代码。
这导致大多数RAM pages被用来分配给framework的代码，同时RAM资源能够被引用的所有进程间共享。

2、大多数static的数据被mmapped到一个进程中，这使得同样的数据能够在进程间共享，并且可以在需要的时候被pagedout。
常见的static数据包括Dalvik Code，app resource，so文件等。

3、大多数情况下，Android通过显式的分配共享内存区域（如ashmem、gralloc）来实现动态RAM区域在不同进程间共享内存。
